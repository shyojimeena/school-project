"""
Django settings for blogghar project.

Generated by 'django-admin startproject' using Django 1.9.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# modified BASE_DIR so that it can play well with django even if it is nested.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.join(os.path.abspath(__file__)))))  # noqa


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mc1^ml6si(09@b8n+fv9p-db=1vh_%18l#x3gkr3kamesaf(l1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
CHAT_WS_SERVER_HOST = 'localhost'
CHAT_WS_SERVER_PORT = 5002


# Application definition

INSTALLED_APPS = [
    # autocomplete-light app. added before admin to override jquery
    # as suggessted by docs.
    'dal',
    'dal_select2',
    # core django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
     'bootstrapform',
     'disqus',

    # Enabling django sites framework for allauth.
    'django.contrib.sites',

    # third party apps
    'crispy_forms',

    # for handling authentication related tasks
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    # Local apps
    'authapp',
    'blog',
    'simplemde',
    'comments',
   # 'discussions',
   # 'messanger',
    'discussions',
    'django_private_chat',
    'djangoratings',
    'courses',
    'guardian',
    'happenings',
    
    
    
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blogghar.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blogghar.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators
# I've intentionally removed all password validation checks becasue this
# is just a representational app and it need to have easy access credentails.


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, 'static'))
STATIC_URL = '/assets/'
STATICFILES_DIRS = (os.path.join(STATIC_ROOT, 'sitefiles'),)

# Media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Crispy form related settings
# allowed packs
CRISPY_ALLOWED_TEMPLATE_PACKS = ('bootstrap', 'uni_form',
                                 'bootstrap3', 'materialize_form')

# template pack to use
CRISPY_TEMPLATE_PACK = 'materialize_form'

MARKDOWN_EXTENSIONS = ['markdown.extensions.extra']

# Allauth and other authentication realted settings

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    'guardian.backends.ObjectPermissionBackend'
)

ACCOUNT_AUTHENTICATION_METHOD = "username"
ACCOUNT_EMAIL_VERIFICATION = "none"

ACCOUNT_FORMS = {
    'login': 'authapp.forms.CustomLoginForm',
    'change_password': 'authapp.forms.CustomChangePwdForm',
    'add_email': 'authapp.forms.CustomAddEmailForm',
    'reset_password': 'authapp.forms.CustomResetPwdForm',
    'reset_password_from_key': 'authapp.forms.CustomResetPasswordKeyForm',
}
ACCOUNT_SIGNUP_FORM_CLASS = 'authapp.signupform.SignupForm'
ACCOUNT_ADAPTER = 'authapp.adapter.CustomAccountAdapter'
ACCOUNT_LOGOUT_ON_GET = True

# Site ID specification for sites framework
SITE_ID = 1
